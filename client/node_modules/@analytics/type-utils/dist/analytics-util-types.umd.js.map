{"version":3,"file":"analytics-util-types.umd.js","sources":["../src/index.js"],"sourcesContent":["\n/*\n  Constants for reuse\n*/\nexport const FUNCTION = 'function'\nexport const STRING = 'string'\nexport const UNDEFINED = 'undefined'\nexport const BOOLEAN = 'boolean'\nexport const OBJECT = 'object'\nexport const ARRAY = 'array'\nexport const NUMBER = 'number'\nexport const noOp = () => {}\n\nexport const isBrowser = typeof window !== UNDEFINED\n\n/** \n * Check if value is function.\n * @param x\n * @return {x is Function}\n */\nexport function isFunction(x) {\n  return typeof x === FUNCTION\n}\n\n/** \n * Check if value is string.\n * @param x\n * @return {x is string}\n */\nexport function isString(x) {\n  return typeof x === STRING\n}\n\n/** \n * Check if value is number.\n * @param v\n * @return {v is Object}\n */\nexport function isNumber(v) {\n  return typeof v === NUMBER && !isNaN(v)\n}\n\n/** \n * Check if value is undefined.\n * @param x\n * @return {x is undefined}\n */\nexport function isUndefined(x) {\n  return typeof x === UNDEFINED\n}\n\n/** \n * @param x\n * @return {x is boolean}\n */\nexport function isBoolean(x) {\n  return typeof x === BOOLEAN\n}\n\n/** \n * @param x\n * @return {x is boolean}\n */\nexport function isNull(x) {\n  return x === null\n}\n\n/** \n * @template T\n * @param x\n * @return {x is Array<T>}\n */\nexport function isArray(x) {\n  return Object.prototype.toString.call(x) === '[object Array]'\n}\n\n/** \n * @param obj\n * @return {obj is Object}\n */\nexport function isObject(obj) {\n  if (typeof obj !== OBJECT || obj === null) return false\n\n  let proto = obj\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto)\n  }\n\n  return Object.getPrototypeOf(obj) === proto\n}\n\n\n/**\n * Check if value is regexp\n * @param {*} value - Value to check\n * @return {boolean} \n */\nexport function isRegex(value) {\n  return value instanceof RegExp\n}\n\n/** \n * @param func - function to check if noOp\n * @return {Boolean} - is noOp\n * @examples\n   function foo() {}\n   isNoOp(foo) // true\n   isNoOp(() => { }) // true\n   isNoOp(() => { console.log('hi') }) // false\n */\nexport function isNoOp(func) {\n  if (!isFunction(func)) return false\n  const emptyFunc = /{(\\r|\\n|\\s)*}/gm\n  const noOpStr = noOp.toString()\n  const funcString = (func.toString().match(emptyFunc) || [''])[0].replace(emptyFunc, noOpStr)\n  return noOpStr === funcString\n}\n\n/**\n * Check if value is truthy\n * @param {*} value \n * @return {Boolean} - is truthy value\n */\nexport function isTruthy(v) {\n  if (isString(v) && v.toLowerCase() === 'false') return false\n  return !!v\n}\n\n/** \n * @param obj\n * @return {obj is NodeList}\n */\nexport function isNodeList(obj) {\n  return NodeList.prototype.isPrototypeOf(obj)\n}\n\n/**\n * Check if input is DOM element\n * @param {HTMLElement|*} element\n * @return {boolean} \n */\nexport function isElement(element) {\n  return element instanceof Element || element instanceof HTMLDocument\n}\n\n/**\n * Check if element is form element\n * @param {HTMLElement} element\n * @return {boolean} \n */\nexport function isForm(element) {\n  return isElement(element) && element.nodeName === 'FORM'\n}\n\n\n/**\n * Check if DOM element is hidden\n * @param {HTMLElement|null|undefined} element\n * @param {HTMLElement|null|undefined} until \n * @return {boolean} \n */\nexport function isHidden(element, until) {\n  if (!element || getComputedStyle(element).visibility === \"hidden\") return true\n\n  while (element) {\n    if (until != null && element === until) return false\n    if (getComputedStyle(element).display === \"none\") return true\n    element = element.parentElement\n  }\n\n  return false\n}"],"names":["FUNCTION","STRING","UNDEFINED","BOOLEAN","OBJECT","NUMBER","noOp","isBrowser","window","isFunction","x","isString","isElement","element","Element","HTMLDocument","Object","prototype","toString","call","nodeName","until","getComputedStyle","visibility","display","parentElement","func","emptyFunc","noOpStr","match","replace","obj","NodeList","isPrototypeOf","v","isNaN","proto","getPrototypeOf","value","RegExp","toLowerCase"],"mappings":"uOAIaA,EAAW,WACXC,EAAS,SACTC,EAAY,YACZC,EAAU,UACVC,EAAS,SAETC,EAAS,SACTC,EAAO,aAEPC,SAAmBC,SAAWN,WAO3BO,EAAWC,GACzB,cAAcA,IAAMV,WAQNW,EAASD,GACvB,cAAcA,IAAMT,WA+GNW,EAAUC,GACxB,OAAOA,aAAmBC,SAAWD,aAAmBE,qBArIrC,mGA+DGL,GACtB,MAA6C,mBAAtCM,OAAOC,UAAUC,SAASC,KAAKT,yBAlBdA,GACxB,cAAcA,IAAMP,iDA8FCU,GACrB,OAAOD,EAAUC,IAAiC,SAArBA,EAAQO,6CAUdP,EAASQ,GAChC,IAAKR,GAAoD,WAAzCS,iBAAiBT,GAASU,WAAyB,SAEnE,KAAOV,GAAS,CACd,GAAa,MAATQ,GAAiBR,IAAYQ,EAAO,SACxC,GAA0C,SAAtCC,iBAAiBT,GAASW,QAAoB,SAClDX,EAAUA,EAAQY,cAGpB,4BA5DqBC,GACrB,IAAKjB,EAAWiB,GAAO,SACvB,IAAMC,EAAY,kBACZC,EAAUtB,EAAKY,WAErB,OAAOU,KADaF,EAAKR,WAAWW,MAAMF,IAAc,CAAC,KAAK,GAAGG,QAAQH,EAAWC,0BAkB3DG,GACzB,OAAOC,SAASf,UAAUgB,cAAcF,sBAtEnBrB,GACrB,OAAa,OAANA,uBA1BgBwB,GACvB,cAAcA,IAAM7B,IAAW8B,MAAMD,wBAyCdH,GACvB,UAAWA,IAAQ3B,GAAkB,OAAR2B,EAAc,SAG3C,IADA,IAAIK,EAAQL,EAC4B,OAAjCf,OAAOqB,eAAeD,IAC3BA,EAAQpB,OAAOqB,eAAeD,GAGhC,OAAOpB,OAAOqB,eAAeN,KAASK,sBAShBE,GACtB,OAAOA,aAAiBC,yCAyBDL,GACvB,QAAIvB,EAASuB,IAA0B,UAApBA,EAAEM,gBACZN,2BA9EiBxB,GAC1B,cAAcA,IAAMR"}